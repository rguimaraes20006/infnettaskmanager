{"version":3,"file":"static/js/404.c19773d6.chunk.js","mappings":"oLAwFA,IAnFiB,WACf,OAAmEA,EAAAA,EAAAA,KAA3DC,EAAU,EAAVA,WAAYC,EAAM,EAANA,OAAQC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAM/CC,GAAQC,EAAAA,EAAAA,UAAQ,WACpB,IAAMC,EAAQC,EAAAA,GAAAA,MAMd,MALa,CACX,CAAEC,MAAO,QAASC,KAAM,EAAGL,MAAO,IAClC,CAAEI,MAAO,OAAQC,IAAK,EAAGL,MAAO,IAChC,CAAEI,MAAO,YAAUC,IAAK,EAAGL,MAAO,KAExBM,KAAI,YAAqB,IAAlBF,EAAK,EAALA,MAAOC,EAAG,EAAHA,IAClBL,GAAQO,EAAAA,EAAAA,SACZZ,EAAWa,QACT,gBAAGC,EAAI,EAAJA,KAAI,OACLN,EAAAA,GAAAA,QAAiBM,GAAMC,cAAgBR,EAAMS,KAAK,CAAEC,KAAMP,IAAOK,WAAW,IAEhF,QAEF,MAAO,CAAEN,MAAAA,EAAOC,IAAAA,EAAKL,MAAAA,EACvB,GACF,GAAG,CAACL,IACEkB,GAAWZ,EAAAA,EAAAA,UACf,kBACED,EACGM,KAAI,SAACQ,GACJ,OAAO,kBACFA,GAAI,IACPd,MAAOc,EAAKd,MAAMQ,QAAO,YAAgC,IAA7BO,EAAQ,EAARA,SAAUN,EAAI,EAAJA,KAAMO,EAAK,EAALA,MAC1C,GAAIpB,EAAQ,CACV,IAAMqB,EAAWd,EAAAA,GAAAA,WAAoBP,EAAQ,cAC7C,GAAIqB,EAASC,SAAWD,EAASP,cAAgBP,EAAAA,GAAAA,QAAiBM,GAAMC,YACtE,OAAO,CACX,CACA,OACEK,EACGI,cACAC,UAAU,OACVC,QAAQ,mBAAoB,IAC5BC,QACC1B,EACGuB,cACAC,UAAU,OACVC,QAAQ,mBAAoB,MAC5B,GAIPL,EACGG,cACAC,UAAU,OACVC,QAAQ,mBAAoB,IAC5BC,QACC1B,EACGuB,cACAC,UAAU,OACVC,QAAQ,mBAAoB,MAC5B,CAIX,KAEJ,IACCb,QAAO,YAAQ,UAALR,MAAoBuB,MAAM,GAAC,GAC1C,CAAC3B,EAAQI,IAGX,MAAO,CACLL,WAAAA,EACAK,MAAAA,EACAwB,WAxEiB,CACjB,CAAEC,KAAM,UAAWC,GAAI,aACvB,CAAED,KAAM,eAAgBC,GAAI,WAC5B,CAAED,KAAM,SAAUC,GAAI,cAsEtB9B,OAAAA,EACAiB,SAAAA,EACAhB,YAAAA,EACAC,WAAAA,EACAC,UAAAA,EAEJ,C,gLCpFa4B,GAAYC,EAAAA,EAAAA,IAAO,MAAPA,CAAa,kLASzBC,GAAQD,EAAAA,EAAAA,IAAO,MAAPA,CAAa,2JAQrBE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAc,kSAatBI,GAAMJ,EAAAA,EAAAA,IAAO,MAAPA,CAAa,0IAOnBK,GAAkBL,EAAAA,EAAAA,IAAO,MAAPA,CAAa,0KAQ/BM,GAAWN,EAAAA,EAAAA,IAAO,MAAPA,CAAa,wUAexBO,GAAiBP,EAAAA,EAAAA,IAAO,MAAPA,CAAa,2JAKrB,YAAW,SAARQ,SAA2B,OAAS,aAAa,IACpD,YAAK,SAAFV,EAAW,IAEvBW,GAAST,EAAAA,EAAAA,IAAO,MAAPA,CAAa,yU,SCpEnC,ECIa,WACX,IAAMU,GAAWC,EAAAA,EAAAA,MACjB,GAAgDC,EAAAA,EAAAA,KAAxChB,EAAU,EAAVA,WAAY7B,EAAU,EAAVA,WAAYE,EAAW,EAAXA,YAChC,GAAgC4C,EAAAA,EAAAA,UAAS,WAAU,eAA5C1B,EAAQ,KAAE2B,EAAW,KAC5B,GAA0BD,EAAAA,EAAAA,UAAS,IAAG,eAA/BzB,EAAK,KAAE2B,EAAQ,KACtB,GAAwBF,EAAAA,EAAAA,UAAS,IAAG,eAA7BhC,EAAI,KAAEmC,EAAO,KAUpB,OACE,UAAC,EAAW,YACV,SAAC,EAAO,gCACR,SAAC,EAAK,WACJ,SAAC,EAAO,CACNC,kBAAkB,EAClBC,MAAO9B,EACP+B,SAAU,SAACC,GAAE,OAAKL,EAASK,EAAGC,OAAOH,MAAM,EAC3CI,YAAY,iBAGhB,SAAC,EAAK,WACJ,SAAC,EAAO,CACNC,KAAK,iBACLN,kBAAkB,EAClBC,MAAOrC,EACPsC,SAAU,SAACC,GAAE,OAAKJ,EAAQI,EAAGC,OAAOH,MAAM,EAC1CI,YAAY,YAGhB,SAAC,EAAiB,yBACjB1B,EAAWlB,KAAI,WAAe8C,GAAG,IAAf3B,EAAI,EAAJA,KAAMC,EAAE,EAAFA,GAAE,OACzB,UAAC,EAAU,CAAC2B,QAAS,kBAAMX,EAAYjB,EAAK,EAAC,WAC3C,SAAC,EAAgB,CAACC,GAAIA,EAAIU,SAAUX,IAASV,IAC5CU,IAFgD2B,EAGtC,KAEf,UAAC,EAAK,YACJ,SAAC,EAAQ,CAACC,QArCH,WACX,GAAKrC,GAAUP,EAAf,CACA,IAAMQ,EAAWd,EAAAA,GAAAA,QAAiB,GAAD,OAAIM,EAAI,WACzCZ,EAAY,GAAD,eAAKF,GAAU,CAAE,CAAEqB,MAAAA,EAAOD,SAAAA,EAAUN,KAAMQ,EAASqC,QAAQC,eACtEb,EAAY,WACZC,EAAS,IACTC,EAAQ,GALmB,CAM7B,EA8B8B,qBACxB,SAAC,EAAQ,CAACS,QAAS,kBAAMf,EAAS,aAAa,EAAC,yBAIxD,C","sources":["Contexts/DataContext/useTasks.js","Pages/Task/Style.js","Pages/Task/index.js","Pages/Task/Task.js"],"sourcesContent":["import { orderBy } from 'lodash'\nimport { DateTime } from 'luxon'\nimport { useMemo } from 'react'\nimport { useDataContext } from './Provider'\n\nconst useTasks = () => {\n  const { storeTasks, search, updateTasks, resetTasks, setSearch } = useDataContext()\n  const categories = [\n    { name: 'Pessoal', bg: '#C7E7E9E5' },\n    { name: 'Profissional', bg: '#E0E34D' },\n    { name: 'Outros', bg: '#57A050E5' },\n  ]\n  const tasks = useMemo(() => {\n    const today = DateTime.utc()\n    const days = [\n      { label: 'Ontem', add: -1, tasks: [] },\n      { label: 'Hoje', add: 0, tasks: [] },\n      { label: 'Amanhã', add: 1, tasks: [] },\n    ]\n    return days.map(({ label, add }) => {\n      const tasks = orderBy(\n        storeTasks.filter(\n          ({ date }) =>\n            DateTime.fromISO(date).toISODate() === today.plus({ days: add }).toISODate(),\n        ),\n        'date',\n      )\n      return { label, add, tasks }\n    })\n  }, [storeTasks])\n  const filtered = useMemo(\n    () =>\n      tasks\n        .map((task) => {\n          return {\n            ...task,\n            tasks: task.tasks.filter(({ category, date, title }) => {\n              if (search) {\n                const taskDate = DateTime.fromFormat(search, 'dd/MM/yyyy')\n                if (taskDate.isValid && taskDate.toISODate() === DateTime.fromISO(date).toISODate())\n                  return true\n              }\n              if (\n                category\n                  .toLowerCase()\n                  .normalize('NFD')\n                  .replace(/[\\u0300-\\u036f]/g, '')\n                  .indexOf(\n                    search\n                      .toLowerCase()\n                      .normalize('NFD')\n                      .replace(/[\\u0300-\\u036f]/g, ''),\n                  ) > -1\n              )\n                return true\n              if (\n                title\n                  .toLowerCase()\n                  .normalize('NFD')\n                  .replace(/[\\u0300-\\u036f]/g, '')\n                  .indexOf(\n                    search\n                      .toLowerCase()\n                      .normalize('NFD')\n                      .replace(/[\\u0300-\\u036f]/g, ''),\n                  ) > -1\n              )\n                return true\n              return false\n            }),\n          }\n        })\n        .filter(({ tasks }) => !!tasks.length),\n    [search, tasks],\n  )\n\n  return {\n    storeTasks,\n    tasks,\n    categories,\n    search,\n    filtered,\n    updateTasks,\n    resetTasks,\n    setSearch,\n  }\n}\n\nexport default useTasks\n","import { Input as MInput, styled } from '@mui/material'\n\nexport const Container = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  column-gap: 20px;\n  width: 100%;\n  padding: 0 22px;\n`\nexport const Title = styled('div')`\n  margin: 40px 0 18px 0;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 29px;\n  color: #ffffff;\n`\nexport const Input = styled(MInput)`\n  width: 100%;\n  height: 43px;\n  padding: 0 17px;\n  background-color: #ebebeb;\n  border-radius: 30px;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 22px;\n  color: #221a1a;\n  box-shadow: 2px 2px 23px 21px rgba(0, 0, 0, 0.05);\n`\nexport const Row = styled('div')`\n  display: inline-flex;\n  justify-content: center;\n  column-gap: 26px;\n  width: 100%;\n  margin-bottom: 25px;\n`\nexport const CategoriesLabel = styled('div')`\n  margin-bottom: 36px;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 22px;\n  color: rgba(255, 255, 255, 0.9);\n`\nexport const Category = styled('div')`\n  display: inline-flex;\n  justify-content: flex-start;\n  align-items: center;\n  column-gap: 24px;\n  width: 100%;\n  margin-bottom: 24px;\n  padding: 0 30px;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 22px;\n  color: rgba(255, 255, 255, 0.9);\n  cursor: pointer;\n`\nexport const CategoryMarker = styled('div')`\n  position: relative;\n  width: 34px;\n  height: 34px;\n  border-radius: 50%;\n  border: 4px solid ${({ selected }) => (selected ? '#fff' : 'transparent')};\n  background-color: ${({ bg }) => bg};\n`\nexport const Button = styled('div')`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 133px;\n  height: 43px;\n  margin-top: 21px;\n  background: #f8f8f8;\n  border-radius: 15px;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 22px;\n  color: #000000;\n  cursor: pointer;\n`\n","import Task from './Task'\n\nexport default Task\n","import { DateTime } from 'luxon'\nimport React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport useTasks from '../../Contexts/DataContext/useTasks'\nimport * as S from './Style'\n\nconst Task = () => {\n  const navigate = useNavigate()\n  const { categories, storeTasks, updateTasks } = useTasks()\n  const [category, setCategory] = useState('Pessoal')\n  const [title, setTitle] = useState('')\n  const [date, setDate] = useState('')\n  const save = () => {\n    if (!title || !date) return\n    const taskDate = DateTime.fromISO(`${date}:00-03`)\n    updateTasks([...storeTasks, { title, category, date: taskDate.toUTC().toString() }])\n    setCategory('Pessoal')\n    setTitle('')\n    setDate('')\n  }\n\n  return (\n    <S.Container>\n      <S.Title>Adicionar Tarefa</S.Title>\n      <S.Row>\n        <S.Input\n          disableUnderline={true}\n          value={title}\n          onChange={(ev) => setTitle(ev.target.value)}\n          placeholder=\"Título\"\n        />\n      </S.Row>\n      <S.Row>\n        <S.Input\n          type=\"datetime-local\"\n          disableUnderline={true}\n          value={date}\n          onChange={(ev) => setDate(ev.target.value)}\n          placeholder=\"Data\"\n        />\n      </S.Row>\n      <S.CategoriesLabel>Categorias</S.CategoriesLabel>\n      {categories.map(({ name, bg }, idx) => (\n        <S.Category onClick={() => setCategory(name)} key={idx}>\n          <S.CategoryMarker bg={bg} selected={name === category} />\n          {name}\n        </S.Category>\n      ))}\n      <S.Row>\n        <S.Button onClick={save}>Salvar</S.Button>\n        <S.Button onClick={() => navigate('/dashboard')}>Voltar</S.Button>\n      </S.Row>\n    </S.Container>\n  )\n}\n\nexport default Task\n"],"names":["useDataContext","storeTasks","search","updateTasks","resetTasks","setSearch","tasks","useMemo","today","DateTime","label","add","map","orderBy","filter","date","toISODate","plus","days","filtered","task","category","title","taskDate","isValid","toLowerCase","normalize","replace","indexOf","length","categories","name","bg","Container","styled","Title","Input","MInput","Row","CategoriesLabel","Category","CategoryMarker","selected","Button","navigate","useNavigate","useTasks","useState","setCategory","setTitle","setDate","disableUnderline","value","onChange","ev","target","placeholder","type","idx","onClick","toUTC","toString"],"sourceRoot":""}