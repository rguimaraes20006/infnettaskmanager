{"version":3,"file":"static/js/857.ab688ef6.chunk.js","mappings":"0QAOaA,GAAYC,EAAAA,EAAAA,IAAO,MAAPA,CAAa,6IAOzBC,GAAQD,EAAAA,EAAAA,IAAO,MAAPA,CAAa,iIAOrBE,GAAOF,EAAAA,EAAAA,IAAO,OAAPA,CAAc,2JASrBG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,EAAPJ,CAAoB,4EAKlCK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,EAAPN,CAAkB,yVAoB9BO,GAASP,EAAAA,EAAAA,IAAOQ,EAAAA,EAAPR,CAAe,kN,SCrDrC,ECEiB,WACf,IAAMS,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAwBF,EAAAA,EAAAA,UAAS,IAAG,eAA7BG,EAAI,KAAEC,EAAO,KACpB,GAAgCJ,EAAAA,EAAAA,UAAS,IAAG,eAArCK,EAAQ,KAAEC,EAAW,KAC5B,GAA8CN,EAAAA,EAAAA,UAAS,IAAG,eAAnDO,EAAe,KAAEC,EAAkB,KAO1C,OACE,UAAC,EAAW,YACV,SAAC,EAAO,gCACR,UAAC,EAAM,YACL,SAAC,EAAa,WACZ,SAAC,EAAW,CACVC,GAAG,QACHC,MAAM,QACNC,MAAOV,EACPW,SAAU,SAACC,GAAE,OAAKX,EAASW,EAAGC,OAAOH,MAAM,EAC3CI,OAAQd,EACRe,aAAa,kBAGjB,SAAC,EAAa,WACZ,SAAC,EAAW,CACVP,GAAG,OACHC,MAAM,gBACNC,MAAOR,EACPS,SAAU,SAACC,GAAE,OAAKT,EAAQS,EAAGC,OAAOH,MAAM,EAC1CI,OAAQZ,EACRa,aAAa,iBAGjB,SAAC,EAAa,WACZ,SAAC,EAAW,CACVC,KAAK,WACLR,GAAG,WACHC,MAAM,QACNC,MAAON,EACPO,SAAU,SAACC,GAAE,OAAKP,EAAYO,EAAGC,OAAOH,MAAM,EAC9CI,OAAQV,EACRW,aAAa,qBAGjB,SAAC,EAAa,WACZ,SAAC,EAAW,CACVC,KAAK,WACLR,GAAG,wBACHC,MAAM,mBACNC,MAAOJ,EACPK,SAAU,SAACC,GAAE,OAAKL,EAAmBK,EAAGC,OAAOH,MAAM,EACrDI,OAAQR,GAAmBA,IAAoBF,EAC/CW,aAAa,kCAGjB,SAAC,EAAa,WACZ,SAAC,EAAQ,CAACC,KAAK,SAASC,QAAQ,YAAYC,QArDvC,WACNlB,GAAUE,GAASE,GAAaE,GAAmBF,IAAaE,GAErET,EAAS,IACX,EAiDkE,8BAOpE,C","sources":["Pages/Register/Style.js","Pages/Register/index.js","Pages/Register/Register.js"],"sourcesContent":["import {\n  styled,\n  FormControl as MFormControl,\n  TextField as MTextField,\n  Button as MButton,\n} from '@mui/material'\n\nexport const Container = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 100%;\n`\nexport const Title = styled('div')`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 19px;\n  color: #545454;\n`\nexport const Form = styled('form')`\n  display: flex;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  row-gap: 26px;\n  width: 100%;\n  margin-top: 10px;\n  padding-top: 9px;\n`\nexport const FormControl = styled(MFormControl)`\n  flex: 1 1 auto;\n  width: 100%;\n  height: 48px;\n`\nexport const TextField = styled(MTextField)`\n  width: 100%;\n  height: 40px;\n  background-color: #ebebeb;\n  border-radius: 5px;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 36px;\n  color: #9c9c9c;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n\n  & label {\n    top: -6px;\n  }\n\n  & div {\n    height: 40px;\n  }\n`\nexport const Button = styled(MButton)`\n  width: 100%;\n  height: 37px;\n  text-transform: none;\n  border-radius: 5px;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 19px;\n  color: #ffffff;\n`\n","import Register from './Register'\n\nexport default Register\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport * as S from './Style'\n\nconst Register = () => {\n  const navigate = useNavigate()\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const save = () => {\n    if (!email || !name || !password || !confirmPassword || password !== confirmPassword) return\n    // @todo: save\n    navigate('/')\n  }\n\n  return (\n    <S.Container>\n      <S.Title>Cadastrar no APP</S.Title>\n      <S.Form>\n        <S.FormControl>\n          <S.TextField\n            id=\"email\"\n            label=\"Email\"\n            value={email}\n            onChange={(ev) => setEmail(ev.target.value)}\n            error={!email}\n            autoComplete=\"user-email\"\n          />\n        </S.FormControl>\n        <S.FormControl>\n          <S.TextField\n            id=\"name\"\n            label=\"Nome Completo\"\n            value={name}\n            onChange={(ev) => setName(ev.target.value)}\n            error={!name}\n            autoComplete=\"user-name\"\n          />\n        </S.FormControl>\n        <S.FormControl>\n          <S.TextField\n            type=\"password\"\n            id=\"password\"\n            label=\"Senha\"\n            value={password}\n            onChange={(ev) => setPassword(ev.target.value)}\n            error={!password}\n            autoComplete=\"user-password\"\n          />\n        </S.FormControl>\n        <S.FormControl>\n          <S.TextField\n            type=\"password\"\n            id=\"password-confirmation\"\n            label=\"Confirme a senha\"\n            value={confirmPassword}\n            onChange={(ev) => setConfirmPassword(ev.target.value)}\n            error={!confirmPassword || confirmPassword !== password}\n            autoComplete=\"user-password-confirmation\"\n          />\n        </S.FormControl>\n        <S.FormControl>\n          <S.Button type=\"button\" variant=\"contained\" onClick={save}>\n            Cadastrar\n          </S.Button>\n        </S.FormControl>\n      </S.Form>\n    </S.Container>\n  )\n}\n\nexport default Register\n"],"names":["Container","styled","Title","Form","FormControl","MFormControl","TextField","MTextField","Button","MButton","navigate","useNavigate","useState","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","id","label","value","onChange","ev","target","error","autoComplete","type","variant","onClick"],"sourceRoot":""}